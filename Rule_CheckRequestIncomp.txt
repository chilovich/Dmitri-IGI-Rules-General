when
    requestBeanEnv : SwimRequestBean(  )
then
logger.info("!!! Begin CheckRequestIncomp...:  " );

	//Beneficiary
	String beneficiaryUserid = requestBeanEnv.getBeneficiary_userid();
	//String beneficiaryName = requestBeanEnv.getBeneficiary_name();
	//String beneficiarySurname = requestBeanEnv.getBeneficiary_surname();
 
	// we need the UserBean
	UserBean user = new UserBean();
	user.setCode(requestBeanEnv.getBeneficiary_userid());		
	BeanList<UserBean> users = UserAction.find(sql, user);
	user = users.get(0);
        logger.info("!!! User Considered:  " + user.getCode());

        // we need the roles list to check risk
	SwimConverter2PM converter2PM = new SwimConverter2PM();
	BeanList<EntitlementBean> ee = new BeanList<EntitlementBean>();
	for (SwimEntitlementBean tmpBean : requestBeanEnv.getRolesToAdd()) {
		ee.add(converter2PM.SwimEntBean2EntBean(tmpBean));
	}
        logger.info("!!! Before Risk Check..." );

        // Check risk information
	CheckRiskDirect riskD = new CheckRiskDirect();

	RiskInfo rI = riskD.checkUser(user, ee, null, null, null, sql);
	if (rI.getRiskNumber() >0) {
		logger.info("!!! FOUND RISK" );
			List<RiskBean> lRiskBean = rI.getAllRisk();
			for (RiskBean riskBean : lRiskBean) {
				// risk name
				logger.info("!!! Risk Name --> " + riskBean.getName());
				// risk level
				switch (riskBean.getRiskLevel().intValue()) {
				case RiskInfo.LOW:
					logger.info("!!! RISK LEVEL --> LOW");
					break;
				case RiskInfo.MEDIUM:
					logger.info("!!! RISK LEVEL --> MEDIUM ");
					break;
				case RiskInfo.HIGH:
					logger.info("!!! RISK LEVEL --> HIGH ");
					break;
				default:
				}// switch
				String riskType = riskBean.getRiskType_name();
				logger.info("!!! Risk Type --> " + riskType);
				if (riskType!=null && riskType.contains("SoD")) {
                                    for (SwimEntitlementBean tmpBean2 : requestBeanEnv.getRolesToAdd()) {
					logger.info("!!! Processing SWIMENT --> " + tmpBean2.getName());
						
					// Set new End Date
					Calendar currentTime = Calendar.getInstance();
					logger.info("!!! Current Time:  " + new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(currentTime.getTime()));
					currentTime.add(Calendar.DAY_OF_MONTH, 1);
					Date newEntDate = currentTime.getTime();
					tmpBean2.setEnddate(newEntDate);
					String stringDate = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(newEntDate);
					logger.info("!!! New End Date:  " + stringDate);
					}
				}// if
			}// for

	}
	else {
		// no risk
		logger.info("!!! NO RISKS FOUND!" );
		return;
	}

        logger.info("!!! End CheckRequestIncomp");