when
    eval( true )
then
logger.info("Disable Expired Users RULE START");

	// get current date, IGI supports only date and no time in timestamp
    SimpleDateFormat cd = new SimpleDateFormat("yyyy-MM-dd");
    Date currentDate = new Date();
	String currentDateString = cd.format(currentDate);
    logger.info("Current Date is: " + currentDateString);

  // find erc users with exp date in the past
  String SQL_QUERY_GET_EXPIRED = "select distinct PM_CODE from " + sql.getCntSQL().dbUser + ".USER_ERC where ( DISABLED = 0 ) and ACCOUNT_EXPIRY_DATE < '" + currentDateString + "'";

  ResultSet rs = sql.getCntSQL().getConnection().createStatement().executeQuery(SQL_QUERY_GET_EXPIRED);
  logger.info("EXECUTE QUERY " + SQL_QUERY_GET_EXPIRED);

    String userPMCode = null;
	
	while (rs.next()) {

            userPMCode = rs.getString(1);
			logger.info("SUSPEND USER_ERC User under PM_CODE " + userPMCode + ", and its ACCOUNTS." );
			
			// Get the userBean by userCode from USER_ERC table
			String SQL_QUERY_GET_USERBEAN = "select distinct CODE from " + sql.getCntSQL().dbUser + ".PERSON where CODE = '" + userPMCode + "'";
			
			ResultSet rs2 = sql.getCntSQL().getConnection().createStatement().executeQuery(SQL_QUERY_GET_USERBEAN);
			logger.info("EXECUTE QUERY " + SQL_QUERY_GET_USERBEAN);
										
			// Update USER_ERC record for such user, set DISABLED attribute - to 1
			//userErcBean = userErcDAO.findUserByCode(sql, userPMCode);
			//userErcBean.setDisabled(1L);
								
			// Now switch to users in PERSON IGI table
			String userCode = null;
			UserBean userBean = null;
			
			while (rs2.next()) {
			
					userCode = rs2.getString(1);
					userBean = UtilAction.findUserByCode(sql, userCode);
			
					if (userBean == null) {
						logger.error("Error - PERSON User not found by Code: " + userCode);
						continue;
					}
	
					AccountBean userAccount = new AccountBean();
					userAccount.setPwdcfg_id(1L); // IDEAS cfg, ID=1

					BeanList accounts = UserAction.findAccount(sql, userBean, userAccount);
					userAccount = (AccountBean) accounts.get(0);
          
					Block blockCode = new Block();
					blockCode.setLock(LockType.AUTHORITATIVE, 1);

					// Lock IDEAS Account
					userAccount.setBlock(blockCode);
					UserAction.updateAccount(sql, userAccount );
					logger.info("User IDEAS Account: " + userBean.getCode() + " locked!");
					
					// Update PERSON record for such user, set USER STATUS to inactive
					userBean.setState(1L);
					logger.info("User " + userBean.getCode() + " PERSON State is set to inactive!");
		
		    }
			rs2.close();
 
    }
    rs.close();

logger.info("Disable Expired Users RULE END");