Set status in IGI - 5230if3 Original
-----------------------------------------

when
    event : EventInBean(  )  
    userErcBean : UserErcBean(  )  
    userBean : UserBean(  )  
    extInfoBean : ExternalInfo(  )  
    orgUnitBean : OrgUnitBean(  )
then
// [ V1.2 - 2016-05-16 ]

  Long disabled = (Long ) userErcBean.getAttribute("DISABLED");

  if(disabled ==null  ) {
    return;
  }

  AccountBean userAccount = new AccountBean();
  userAccount.setPwdcfg_id(1L); // IDEAS cfg, ID=1

  BeanList accounts = UserAction.findAccount(sql, userBean, userAccount);
  userAccount = (AccountBean) accounts.get(0);
          
  Block blockCode = new Block();

  if(disabled ==1L){
    // Set the Technical block to 1
    blockCode.setBlocco(0, 1);
  } else if(disabled ==0L){
    blockCode.setBlocco(0, 0);
  } else {
    logger.debug("Disabled value not supported: "+disabled);
    return;
  }

  userAccount.setBlock(blockCode);
      
  UserAction.updateAccount(sql, userAccount );
  
  
------------ New Rule with setting EXPIRATION DATE - > DISABLED link ----------------

when
    event : EventInBean(  )  
    userErcBean : UserErcBean(  )  
    userBean : UserBean(  )  
    extInfoBean : ExternalInfo(  )  
    orgUnitBean : OrgUnitBean(  )
then
// [ V1.3 - 2018-01-09 D.Chilovich Rule sets disabled status by DISABLED and EXP DATE attributes ] 

  Long disabled = (Long) userErcBean.getAttribute("DISABLED");
  Date expiryDate = (Date) userErcBean.getAttribute("ACCOUNT_EXPIRY_DATE");
  //String expiryDate = (String) userErcBean.getAttribute("ACCOUNT_EXPIRY_DATE");
	

  if( ( disabled == null || disabled.longValue() == 0L ) && expiryDate == null ) {
    return;
  }
  
  AccountBean userAccount = new AccountBean();
  userAccount.setPwdcfg_id(1L); // IDEAS cfg, ID=1

  BeanList accounts = UserAction.findAccount(sql, userBean, userAccount);
  userAccount = (AccountBean) accounts.get(0);
  
  // set EXPIRATION DATE value
  if (expiryDate != null && userAccount != null) {
			//String stringDate = new SimpleDateFormat("dd-MM-yyyy").format(expiryDate);
			logger.info("Ideas Account Expiration Date set based on User date" );  //:  " + stringDate);
			
			userAccount.setExpire(expiryDate);
			//UserAction.updateAccount(sql, userAccount);
			} 
				
  // set DISABLED for User based on expiration date
  // This code is not needed, Ideas Account locks User as well.
  
  // set DISABLED status for Ideas Account       
  Block blockCode = new Block();

  if(disabled ==1L){
    // Set the Technical block to 1
    blockCode.setBlocco(0, 1);
  } else if(disabled ==0L){
    blockCode.setBlocco(0, 0);
  } else {
    logger.debug("Disabled value not supported: "+disabled);
    return;
  }

  userAccount.setBlock(blockCode);
  UserAction.updateAccount(sql, userAccount );
  

----------------------------------------------------------------------------------------------
	public void setIdeasAccountExpiryFromUser(UserBean userBean, UserErcBean userErcBean) {
		logger.info("!!! Commencing Rule SetExpiration");
		logger.info("User to process : " + userBean.getCode());

		AccountBean userAccount = new AccountBean();
		userAccount.setPwdcfg_id(1L); // IDEAS account cfg, ID=1
		userAccount.getPwdcfg_id();
		BeanList accounts = null;
		try {
			accounts = UserAction.findAccount(sql, userBean, userAccount);
			userAccount = (AccountBean) accounts.get(0);

			Date expiryDate = (Date) userErcBean.getAttribute("ACCOUNT_EXPIRY_DATE");

			if (expiryDate != null) {
				String stringDate = new SimpleDateFormat("dd-MM-yyyy").format(expiryDate);
				logger.info("Exp2:  " + stringDate);

				if (userAccount != null) {
					userAccount.setExpire(expiryDate);
					logger.info("Expiration Date for Ideas set!!!!");
					UserAction.updateAccount(sql, userAccount);
				}
			} else {
				logger.info("!!! No expiry date found!!! ");
			}
		} catch (Exception e) {
			logger.error("!!! Error occured in SetExpiration rule !!!");
		}

	}
	
-----------------------------------------------------
  
import com.engiweb.logger.impl.Log4JImpl
import com.engiweb.pm.entity.BeanList
import com.engiweb.profilemanager.backend.dao.db.SQLH
import com.engiweb.profilemanager.common.bean.AccountBean
import com.engiweb.profilemanager.common.bean.Block
import com.engiweb.profilemanager.common.enumerations.LockType
import com.engiweb.profilemanager.common.bean.entitlement.EntitlementBean
import com.engiweb.profilemanager.common.bean.ExternalInfo
import com.engiweb.profilemanager.common.bean.OrgUnitBean
import com.engiweb.profilemanager.common.bean.OrgUnitErcBean
import com.engiweb.profilemanager.common.bean.PwdCfgBean
import com.engiweb.profilemanager.common.bean.UserBean
import com.engiweb.profilemanager.common.bean.UserErcBean
import com.engiweb.profilemanager.common.bean.event.EventBean
import com.engiweb.profilemanager.common.bean.event.EventInBean
import com.engiweb.profilemanager.common.ruleengine.action.OrgUnitAction
import com.engiweb.profilemanager.common.ruleengine.action.UserAction
import com.engiweb.profilemanager.common.ruleengine.action.UtilAction
import com.engiweb.profilemanager.common.ruleengine.action.JobRoleAction
import com.engiweb.toolkit.common.DBMSException
import com.engiweb.logger.impl.Log4JImpl
import com.engiweb.pm.entity.BeanList
import com.engiweb.profilemanager.backend.dao.db.SQLH
import com.engiweb.profilemanager.common.bean.AccountBean
import com.engiweb.profilemanager.common.bean.Block
import com.engiweb.profilemanager.common.enumerations.LockType
import com.engiweb.profilemanager.common.bean.entitlement.EntitlementBean
import com.engiweb.profilemanager.common.bean.ExternalInfo
import com.engiweb.profilemanager.common.bean.OrgUnitBean
import com.engiweb.profilemanager.common.bean.OrgUnitErcBean
import com.engiweb.profilemanager.common.bean.PwdCfgBean
import com.engiweb.profilemanager.common.bean.UserBean
import com.engiweb.profilemanager.common.bean.UserErcBean
import com.engiweb.profilemanager.common.bean.event.EventBean
import com.engiweb.profilemanager.common.bean.event.EventInBean
import com.engiweb.profilemanager.common.ruleengine.action.OrgUnitAction
import com.engiweb.profilemanager.common.ruleengine.action.UserAction
import com.engiweb.profilemanager.common.ruleengine.action.UtilAction
import com.engiweb.profilemanager.common.ruleengine.action.JobRoleAction
import com.engiweb.toolkit.common.DBMSException
import com.engiweb.profilemanager.common.enumerations.EntitlementType
import java.util.ArrayList
import java.util.List
import com.crossideas.ap.common.bean.SwimEntitlementBean
import com.crossideas.ap.common.ruleengine.action.RequestGenerationRule

global com.engiweb.profilemanager.backend.dao.db.SQLH sql
global com.engiweb.logger.impl.Log4JImpl logger
global com.engiweb.profilemanager.backend.dao.db.SQLH sql
global com.engiweb.logger.impl.Log4JImpl logger


=====================================================