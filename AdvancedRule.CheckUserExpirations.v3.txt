when
    eval( true )
then
  logger.info("Disable Expired Users RULE START");

	// get current date, IGI supports only date and no time in timestamp
    SimpleDateFormat cd = new SimpleDateFormat("yyyy-MM-dd");
    Date currentDate = new Date();
	String currentDateString = cd.format(currentDate);
    logger.info("Current Date is: " + currentDateString);

  // find IDEAS Accounts with expire date in the past. Expire date is set by USER_ERC - IDEAS Sync job.
  String SQL_QUERY_GET_EXPIRED = "select distinct CODE from " + sql.getCntSQL().dbUser + ".PWDMANAGEMENT where PWDCFG =1 and EXPIRE is not null and DISABLED != 1 and EXPIRE < '" + currentDateString + "'";

  ResultSet rs = sql.getCntSQL().getConnection().createStatement().executeQuery(SQL_QUERY_GET_EXPIRED);
  logger.info("EXECUTE QUERY " + SQL_QUERY_GET_EXPIRED);

  String userIDEASCode = null;
	
	while (rs.next()) {

            userIDEASCode = rs.getString(1);
			logger.info("Suspend User via IDEAS Account " + userIDEASCode + "." );
			
			// Get the userBean from PERSON table via userIDEASCode from IDEAS Accounts table
			String SQL_QUERY_GET_USERBEAN = "select distinct CODE from " + sql.getCntSQL().dbUser + ".PERSON where CODE = '" + userIDEASCode + "'";
			
			ResultSet rs2 = sql.getCntSQL().getConnection().createStatement().executeQuery(SQL_QUERY_GET_USERBEAN);
			logger.info("EXECUTE QUERY " + SQL_QUERY_GET_USERBEAN);
										
			// Now switch to usersBeans in PERSON IGI table
			String userCode = null;
			UserBean userBean = null;
			
			while (rs2.next()) {
			
					userCode = rs2.getString(1);
					userBean = UtilAction.findUserByCode(sql, userCode);
			
					if (userBean == null) {
						logger.error("Error - PERSON User not found by Code: " + userCode);
						continue;
					}
	
					AccountBean userAccount = new AccountBean();
					userAccount.setPwdcfg_id(1L); // IDEAS cfg, ID=1

					BeanList accounts = UserAction.findAccount(sql, userBean, userAccount);
					userAccount = (AccountBean) accounts.get(0);
          
					Block blockCode = new Block();
					blockCode.setLock(LockType.AUTHORITATIVE, 1);

					// Lock IDEAS Account
					userAccount.setBlock(blockCode);
					UserAction.updateAccount(sql, userAccount );
					logger.info("User IDEAS Account: " + userBean.getCode() + " was disabled!");
					
					// Update PERSON record for such user, set USER STATUS to inactive
					userBean.setState(1L);
					logger.info("User " + userBean.getCode() + " PERSON State is set to inactive!");
		
		    }
			rs2.close();
 
    }
    rs.close();

logger.info("Disable Expired Users RULE END");